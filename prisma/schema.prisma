generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id
  email         String      @unique
  name          String
  emailVerified Boolean
  image         String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now()) @updatedAt
  sessions      Session[]
  accounts      Account[]
  challenges    Challenge[]

  @@map("user")
  Submission Submission[]
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @default(now()) @updatedAt

  @@map("account")
}

model Verification {
  id         String   @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt

  @@map("verification")
}

model Challenge {
  id          String      @id @default(uuid())
  title       String
  description String
  level       Int
  boilerplate String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  userId      String?
  User        User?    @relation(fields: [userId], references: [id])
  tips        String?
  tests       String

  Submission Submission[]
}

model Submission {
  id          String   @id @default(uuid())
  userId      String
  challengeId String
  code        String
  passed      Boolean
  createdAt   DateTime @default(now())

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  challenge   Challenge @relation(fields: [challengeId], references: [id], onDelete: Cascade)

  @@unique([userId, challengeId], name: "userId_challengeId")
  @@map("submission")
}
